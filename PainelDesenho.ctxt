#BlueJ class context
comment0.target=PainelDesenho
comment0.text=\r\n\ Cria\ desenhos\ de\ acordo\ com\ o\ tipo\ e\ eventos\ do\ mouse\r\n\ \r\n\ @author\ Julio\ Arakaki\ \r\n\ @version\ 20220815\r\n
comment1.params=msg\ tipo\ corAtual\ esp
comment1.target=PainelDesenho(javax.swing.JLabel,\ TipoPrimitivo,\ java.awt.Color,\ int)
comment1.text=\r\n\ Constroi\ o\ painel\ de\ desenho\r\n\r\n\ @param\ msg\ mensagem\ a\ ser\ escrita\ no\ rodape\ do\ painel\r\n\ @param\ tipo\ tipo\ atual\ do\ primitivo\r\n\ @param\ corAtual\ cor\ atual\ do\ primitivo\r\n\ @param\ esp\ espessura\ atual\ do\ primitivo\r\n
comment10.params=esp
comment10.target=void\ setEsp(int)
comment10.text=\r\n\ Altera\ a\ espessura\ do\ primitivo\r\n\r\n\ @param\ esp\ espessura\ do\ primitivo\r\n
comment11.params=
comment11.target=int\ getEsp()
comment11.text=\r\n\ Retorna\ a\ espessura\ do\ primitivo\r\n\r\n\ @return\ espessura\ do\ primitivo\r\n
comment12.params=corAtual
comment12.target=void\ setCorAtual(java.awt.Color)
comment12.text=\r\n\ Altera\ a\ cor\ atual\ do\ primitivo\r\n\r\n\ @param\ corAtual\ cor\ atual\ do\ primitivo\r\n
comment13.params=backgroung
comment13.target=void\ setCorBackground(java.awt.Color)
comment13.text=\r\n\ Altera\ a\ cor\ da\ variavel\ background\r\n\r\n\ @param\ corAtual\ cor1\ da\ variavel\ background\r\n
comment14.params=corAtual
comment14.target=void\ setCor1(java.awt.Color)
comment14.text=\r\n\ Altera\ a\ cor1\ do\ primitivo\ figura\r\n\r\n\ @param\ corAtual\ cor1\ do\ primitivo\ figura\r\n
comment15.params=corAtual
comment15.target=void\ setCor2(java.awt.Color)
comment15.text=\r\n\ Altera\ a\ cor2\ do\ primitivo\ figura\r\n\r\n\ @param\ corAtual\ cor2\ do\ primitivo\ figura\r\n
comment16.params=alteracao
comment16.target=void\ setAlt(TipoOperacoes)
comment16.text=\r\n\ Atualiza\ a\ vari\r\n
comment17.params=
comment17.target=TipoOperacoes\ getAlt()
comment18.params=
comment18.target=java.awt.Color\ getCorAtual()
comment18.text=\r\n\ retorna\ a\ cor\ atual\ do\ primitivo\r\n\r\n\ @return\ cor\ atual\ do\ primitivo\r\n
comment19.params=
comment19.target=java.awt.Color\ getCorBackground()
comment19.text=\r\n\ retorna\ a\ cor\ atual\ do\ background\r\n\r\n\ @return\ cor\ atual\ do\ background\r\n
comment2.params=tipo
comment2.target=void\ setTipo(TipoPrimitivo)
comment2.text=\r\n\ Altera\ o\ tipo\ atual\ do\ primitivo\r\n\r\n\ @param\ tipo\ tipo\ do\ primitivo\r\n
comment20.params=
comment20.target=java.awt.Color\ getCor2()
comment20.text=\r\n\ retorna\ a\ cor\ atual\ do\ primitivo\r\n\r\n\ @return\ cor\ atual\ do\ primitivo\r\n
comment21.params=
comment21.target=java.awt.Color\ getCor1()
comment21.text=\r\n\ retorna\ a\ cor\ atual\ do\ primitivo\r\n\r\n\ @return\ cor\ atual\ do\ primitivo\r\n
comment22.params=msg
comment22.target=void\ setMsg(javax.swing.JLabel)
comment22.text=\r\n\ Altera\ a\ msg\ a\ ser\ apresentada\ no\ rodape\r\n\r\n\ @param\ msg\ mensagem\ a\ ser\ apresentada\r\n
comment23.params=
comment23.target=javax.swing.JLabel\ getMsg()
comment23.text=\r\n\ Retorna\ a\ mensagem\r\n\r\n\ @return\ mensagem\ as\ ser\ apresentada\ no\ rodape\r\n
comment24.params=g
comment24.target=void\ paintComponent(java.awt.Graphics)
comment24.text=\r\n\ Metodo\ chamado\ quando\ o\ paint\ eh\ acionado\r\n\r\n\ @param\ g\ biblioteca\ para\ desenhar\ em\ modo\ grafico\r\n
comment25.params=menorTriangulo
comment25.target=void\ setMenorTriangulo(java.lang.Object)
comment26.params=
comment26.target=java.lang.Object\ getMenorTriangulo()
comment27.params=e
comment27.target=void\ mousePressed(java.awt.event.MouseEvent)
comment27.text=\r\n\ Evento\:\ pressionar\ do\ mouse\r\n\r\n\ @param\ e\ dados\ do\ evento\r\n
comment28.params=e
comment28.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment29.params=e
comment29.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment3.params=grau
comment3.target=void\ setGrau(double)
comment30.params=e
comment30.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment31.params=e
comment31.target=void\ mouseExited(java.awt.event.MouseEvent)
comment32.params=e
comment32.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment33.params=e
comment33.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment33.text=\r\n\ Evento\ mouseMoved\:\ escreve\ mensagem\ no\ rodape\ (x,\ y)\ do\ mouse\r\n\r\n\ @param\ e\ dados\ do\ evento\ do\ mouse\r\n
comment34.params=xr\ yr\ xo\ yo\ cosseno\ seno
comment34.target=void\ calcNovosPontos(int,\ int,\ int,\ int,\ double,\ double)
comment35.params=xo\ yo\ x\ y\ escalaX\ escalaY
comment35.target=void\ calcNovosPontosEscala(int,\ int,\ int,\ int,\ double,\ double)
comment36.params=xNovo
comment36.target=void\ setNovoPontoX(double)
comment37.params=yNovo
comment37.target=void\ setNovoPontoY(double)
comment38.params=
comment38.target=double\ getNovoPontoX()
comment39.params=
comment39.target=double\ getNovoPontoY()
comment4.params=
comment4.target=double\ getGrau()
comment40.params=g
comment40.target=void\ desenharPrimitivos(java.awt.Graphics)
comment40.text=\r\n\ Desenha\ os\ primitivos\r\n\r\n\ @param\ g\ biblioteca\ para\ desenhar\ em\ modo\ grafico\r\n
comment41.params=
comment41.target=void\ redesenhar()
comment41.text=\r\n\ M\u00E9todo\ redesenhar\ -\ desenha\ todos\ os\ primitivos\ que\ estao\ armazenados\ na\ estrutura\ de\ dados\r\n\r\n
comment42.params=
comment42.target=void\ redesenharComCorDeFundo()
comment43.params=
comment43.target=void\ removerED()
comment43.text=\r\n\ M\u00E9todo\ removerED\ -\ limpa\ todas\ as\ listas\ ligadas\ setando\ o\ inicio\ e\ fim\ para\ null\ e\ quantidade\ de\ nos\ \=\ 0.\r\n\r\n
comment44.params=
comment44.target=void\ voltar()
comment44.text=\r\n\ M\u00E9todo\ voltar\ -\ desfaz\ a\ ultima\ alteracao\ do\ usuario.\r\n\r\n
comment45.params=
comment45.target=void\ remover()
comment45.text=\r\n\ M\u00E9todo\ remover\ -\ remove\ um\ tipo\ primitivo\ de\ acordo\ com\ o\ click\ do\ usuario.\r\n\r\n
comment46.params=
comment46.target=ed.No\ menorPonto()
comment46.text=\r\n\ M\u00E9todo\ menorPonto\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhum\ ponto\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ do\ menor\ ponto.\r\n
comment47.params=p
comment47.target=double\ distanciaMenorPonto(ed.No)
comment47.text=\r\n\ M\u00E9todo\ distanciaMenorPonto\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ do\ ponto\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ o\ ponto\ mais\ proximo\ e\ o\ ponto(xR,yR)\r\n
comment48.params=x\ y\ x1\ y1\ x2\ y2
comment48.target=double\ pDistance(float,\ float,\ float,\ float,\ float,\ float)
comment48.text=\r\n\ M\u00E9todo\ menorReta\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhuma\ reta\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ da\ menor\ reta.\r\n
comment49.params=x1\ y1\ x2\ y2\ Px\ Py
comment49.target=double\ distanceToLineSegment(double,\ double,\ double,\ double,\ double,\ double)
comment5.params=escalaX
comment5.target=void\ setEscalaX(double)
comment50.params=x1\ y1\ x2\ y2\ x3\ y3
comment50.target=double\ shortestDistance(double,\ double,\ double,\ double,\ double,\ double)
comment51.params=
comment51.target=ed.No\ menorReta()
comment52.params=p
comment52.target=double\ distanciaMenorReta(ed.No)
comment52.text=\r\n\ M\u00E9todo\ distanciaMenorReta\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ do\ retangulo\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ a\ reta\ mais\ proxima\ e\ o\ ponto(xR,yR)\r\n
comment53.params=
comment53.target=ed.No\ menorRetangulo()
comment53.text=\r\n\ M\u00E9todo\ menorRetangulo\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhum\ retangulo\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ do\ menor\ retangulo.\r\n
comment54.params=p
comment54.target=double\ distanciaMenorRetangulo(ed.No)
comment54.text=\r\n\ M\u00E9todo\ distanciaMenorRetangulo\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ da\ reta\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ o\ retangulo\ mais\ proximo\ e\ o\ ponto(xR,yR)\r\n
comment55.params=
comment55.target=ed.No\ menorTriangulo()
comment55.text=\r\n\ M\u00E9todo\ menorTriangulo\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhum\ triangulo\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ do\ menor\ triangulo.\r\n
comment56.params=p
comment56.target=double\ distanciaMenorTriangulo(ed.No)
comment56.text=\r\n\ M\u00E9todo\ distanciaMenorTriangulo\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ do\ triangulo\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ o\ triangulo\ mais\ proximo\ e\ o\ ponto(xR,yR)\r\n
comment57.params=
comment57.target=ed.No\ menorCirculo()
comment57.text=\r\n\ M\u00E9todo\ menorCirculo\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhum\ circulo\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ do\ menor\ circulo.\r\n
comment58.params=
comment58.target=void\ mostraPontosFiguraCirculo()
comment59.params=p
comment59.target=double\ distanciaMenorCirculo(ed.No)
comment59.text=\r\n\ M\u00E9todo\ distanciaMenorCirculo\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ do\ circulo\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ o\ ponto\ mais\ proximo\ e\ o\ ponto(xR,yR)\r\n
comment6.params=
comment6.target=double\ getEscalaX()
comment60.params=
comment60.target=ed.No\ menorFigura()
comment60.text=\r\n\ M\u00E9todo\ menorFigura\r\n\r\n\ @return\ null\ se\ n\u00E3o\ houver\ nenhuma\ figura\ que\ tenha\ distancia\ menor\ ou\ igual\ a\ 10,\ caso\ contr\u00E1rio\ retorna\ o\ endere\u00E7o\ da\ menor\ figura.\r\n
comment61.params=p
comment61.target=double\ distanciaMenorFigura(ed.No)
comment61.text=\r\n\ M\u00E9todo\ distanciaMenorFigura\r\n\r\n\ @param\ p\ Um\ par\u00E2metro\ -\ n\u00F3\ que\ cont\u00E9m\ os\ dados\ da\ figura\r\n\ @return\ O\ valor\ de\ retorno\ -\ distancia\ entre\ a\ figura\ mais\ proxima\ e\ o\ ponto(xR,yR)\r\n
comment62.params=corAtual
comment62.target=java.awt.Color\ inverterCor(java.awt.Color)
comment62.text=\r\n\ M\u00E9todo\ inverterCor\ -\ inverte\ uma\ cor\ enviada\ por\ par\u00E2metro\r\n\r\n\ @param\ corAtual\ Um\ par\u00E2metro\ -\ que\ contem\ a\ cor\ atual\r\n\ @return\ O\ valor\ de\ retorno\ -\ retorna\ a\ cor\ inversa\ da\ cor\ enviada\ por\ par\u00E2metro\r\n
comment7.params=escalaY
comment7.target=void\ setEscalaY(double)
comment8.params=
comment8.target=double\ getEscalaY()
comment9.params=
comment9.target=TipoPrimitivo\ getTipo()
comment9.text=\r\n\ Retorna\ o\ tipo\ do\ primitivo\r\n\r\n\ @return\ tipo\ do\ primitivo\r\n
numComments=63
